[{"D:\\project\\client\\pages\\delete.tsx":"1","D:\\project\\client\\pages\\forgotpassword.tsx":"2","D:\\project\\client\\pages\\index.tsx":"3","D:\\project\\client\\pages\\login.tsx":"4","D:\\project\\client\\pages\\logintolog.tsx":"5","D:\\project\\client\\pages\\register.tsx":"6","D:\\project\\client\\pages\\resetpassword.tsx":"7","D:\\project\\client\\pages\\template.tsx":"8","D:\\project\\client\\pages\\_app.tsx":"9","D:\\project\\client\\pages\\_document.tsx":"10"},{"size":2377,"mtime":1705479508134,"results":"11","hashOfConfig":"12"},{"size":4465,"mtime":1705479508134,"results":"13","hashOfConfig":"12"},{"size":664,"mtime":1705479508134,"results":"14","hashOfConfig":"12"},{"size":4935,"mtime":1707331403096,"results":"15","hashOfConfig":"12"},{"size":4646,"mtime":1705479508135,"results":"16","hashOfConfig":"12"},{"size":3207,"mtime":1705479508135,"results":"17","hashOfConfig":"12"},{"size":3352,"mtime":1705479508136,"results":"18","hashOfConfig":"12"},{"size":23147,"mtime":1705483391589,"results":"19","hashOfConfig":"12"},{"size":189,"mtime":1705479508132,"results":"20","hashOfConfig":"12"},{"size":336,"mtime":1705483121686,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nsuzix",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\project\\client\\pages\\delete.tsx",[],[],"D:\\project\\client\\pages\\forgotpassword.tsx",[],[],"D:\\project\\client\\pages\\index.tsx",[],[],"D:\\project\\client\\pages\\login.tsx",[],[],"D:\\project\\client\\pages\\logintolog.tsx",[],[],"D:\\project\\client\\pages\\register.tsx",[],[],"D:\\project\\client\\pages\\resetpassword.tsx",[],[],"D:\\project\\client\\pages\\template.tsx",["53"],[],"import React, { useState, useEffect } from \"react\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport Highcharts from \"highcharts\";\r\nimport axios from \"axios\";\r\nimport { Button, Card, Col, Progress, Row, Statistic } from \"antd\";\r\nimport { ArrowDownOutlined, ArrowUpOutlined } from \"@ant-design/icons\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\n\r\nconst { Meta } = Card;\r\n\r\ninterface LogEntry {\r\n  day: string;\r\n  time: string;\r\n  event_happening: string;\r\n}\r\n\r\nfunction Admin() {\r\n  const [usernamelogin, setUsernamelogin] = useState(\"\");\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(\"2023-09-03\"); // Default date\r\n  const [selectedTime, setSelectedTime] = useState(\"00:00\"); // Default time\r\n  const [temperature, setTemperature] = useState([]);\r\n  const [humidity, setHumidity] = useState([]);\r\n  const [xAxisCategories, setXAxisCategories] = useState();\r\n  const [countuser, setUser] = useState([]);\r\n  const [selectedMenu, setSelectedMenu] = useState(\"DASHBOARD\");\r\n  const [datalog, setDatalog] = useState([]);\r\n  const [avatarUrl, setAvatarUrl] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1); // หน้าปัจจุบัน\r\n  const [itemsPerPage] = useState(10); // จำนวนรายการต่อหน้า\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = datalog.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const pageNumbers: number[] = [];\r\n  for (let i = 1; i <= Math.ceil(datalog.length / itemsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  const renderPageNumbers = pageNumbers.map((number) => {\r\n    return (\r\n      <li key={number}>\r\n        <a href=\"#\" onClick={() => setCurrentPage(number)}>\r\n          {number}\r\n        </a>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [recaptchaResponse, setRecaptchaResponse] = useState<string>(\"\");\r\n  const [isCaptchaVerified, setIsCaptchaVerified] = useState<boolean>(false);\r\n\r\n  const handleCaptchaVerify = (token: string | null) => {\r\n    setIsCaptchaVerified(true);\r\n    setRecaptchaResponse(token || \"\");\r\n  };\r\n\r\n  const verifyRecaptcha = async (recaptchaResponse: string) => {\r\n    const secretKey = \"6Lcoi9onAAAAAJ_rNHdtMM7EGmubvFQC8slUHiTt\";\r\n    const verificationUrl = \"https://www.google.com/recaptcha/api/siteverify\";\r\n    try {\r\n      const response = await axios.post(verificationUrl, null, {\r\n        params: {\r\n          secret: secretKey,\r\n          response: recaptchaResponse,\r\n        },\r\n      });\r\n\r\n      const responseData = response.data;\r\n      return responseData.success;\r\n    } catch (error) {\r\n      console.error(\"Error verifying reCAPTCHA:\", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const _handleLogin = async () => {\r\n    try {\r\n      if (!username || !password) {\r\n        setErrorMessage(\"Please enter a username password \");\r\n        return;\r\n      }\r\n\r\n      if (!isCaptchaVerified) {\r\n        setErrorMessage(\"Please verify the ReCAPTCHA\");\r\n        return;\r\n      }\r\n\r\n      const isRecaptchaValid = await verifyRecaptcha(recaptchaResponse);\r\n\r\n      const result = await axios({\r\n        method: \"post\",\r\n        maxBodyLength: Infinity,\r\n        url: \"/api/user/adminlog\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: JSON.stringify({\r\n          username: username,\r\n          password: password,\r\n        }),\r\n      });\r\n      if (result.data.result.role === \"admin\") {\r\n        console.log(\"Login successful! as admin\");\r\n        setIsLoggedIn(true);\r\n      }\r\n      if (result.data.result.role === \"user\") {\r\n        setErrorMessage(\"คุณไม่มีสิทธิ์เข้าถึง\");\r\n        return;\r\n      }\r\n    } catch (errorMessage: any) {\r\n      if (axios.isAxiosError(errorMessage)) {\r\n        if (errorMessage.response) {\r\n          setErrorMessage(\"Invalid username or password\");\r\n        }\r\n      }\r\n      console.log(\"err=========>\", errorMessage);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      const storedUsername = localStorage.getItem(\"usernamelogin\");\r\n      if (storedUsername) {\r\n        setUsernamelogin(storedUsername);\r\n      }\r\n    }\r\n    // Fetch temperature and humidity data from the server when the date and time change\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.post(\"/api/temp/daytemp\", {\r\n          day: selectedDate,\r\n          // time: selectedTime,\r\n        });\r\n        const data = response.data;\r\n\r\n        // Extract temperature and humidity from the response\r\n        const temperature = data.result.map((entry) => entry.temp);\r\n        const humidity = data.result.map((entry) => entry.humidity);\r\n        const timeData = data.result.map((entry) => entry.time);\r\n\r\n        setTemperature(temperature);\r\n        setHumidity(humidity);\r\n        setXAxisCategories(timeData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    const fetchLog = async () => {\r\n      try {\r\n        const response = await axios.get(\"/api/log\");\r\n        const data = response.data;\r\n\r\n        const logdata = data.result.rows.map((entry) => ({\r\n          day: entry.day,\r\n          time: entry.time,\r\n          event_happening: entry.event_happening,\r\n        }));\r\n        console.log(logdata);\r\n\r\n        setDatalog(logdata);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    fetchLog();\r\n\r\n    const fetchpix = async () => {\r\n      try {\r\n        const randomText = Math.random().toString(36).substring(7);\r\n        const response = await fetch(`https://robohash.org/${randomText}.png`);\r\n        if (response.ok) {\r\n          setAvatarUrl(response.url);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching avatar:\", error);\r\n      }\r\n    };\r\n    fetchpix();\r\n\r\n    const fetchDataUser = async () => {\r\n      try {\r\n        const response = await axios.get(\"/api/user\");\r\n        const data = response.data;\r\n\r\n        const countuser = data.result.count;\r\n        const nameone = data.result.rows[4].username;\r\n        const nametwo = data.result.rows[0].username;\r\n        const namethree = data.result.rows[1].username;\r\n        const namefour = data.result.rows[3].username;\r\n        console.log(countuser);\r\n\r\n        setUser(countuser);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchDataUser();\r\n  }, [selectedDate, selectedTime]);\r\n\r\n  const openSidebar = () => {\r\n    setSidebarOpen(true);\r\n  };\r\n\r\n  const closeSidebar = () => {\r\n    setSidebarOpen(false);\r\n  };\r\n\r\n  const selectMenu = (menu) => {\r\n    setSelectedMenu(menu);\r\n  };\r\n\r\n  const options = {\r\n    chart: {\r\n      type: \"area\",\r\n    },\r\n    title: {\r\n      text: \"Temperature and Humidity\",\r\n    },\r\n    xAxis: {\r\n      categories: xAxisCategories,\r\n    },\r\n    yAxis: {\r\n      title: {\r\n        text: \"value\",\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Temperature\",\r\n        data: temperature,\r\n      },\r\n      {\r\n        name: \"Humidity\",\r\n        data: humidity,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <title>Admin Dashboard</title>\r\n        <link\r\n          href=\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@100;200;300;400;500;600;700;800;900&display=swap\"\r\n          rel=\"stylesheet\"\r\n        />\r\n        <link\r\n          href=\"https://fonts.googleapis.com/icon?family=Material+Icons+Outlined\"\r\n          rel=\"stylesheet\"\r\n        />\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css\"\r\n        />\r\n      </header>\r\n      <div className=\"grid-container\">\r\n        {/* Header */}\r\n        <header className=\"header\">\r\n          <div className=\"menu-icon\" onClick={openSidebar}>\r\n            <span className=\"material-icons-outlined\">menu</span>\r\n          </div>\r\n          <div className=\"header-left\">\r\n            <span className=\"material-icons-outlined\">search</span>\r\n          </div>\r\n          <div className=\"header-right\">\r\n            {/* <span className=\"material-icons-outlined\">account_circle</span> */}\r\n            {avatarUrl && (\r\n              <Image className=\"avatar-image\" src={avatarUrl} alt=\"Avatar\" width={40} height={25} />\r\n            )}\r\n            Wellcome {usernamelogin}\r\n          </div>\r\n        </header>\r\n        {/* End Header */}\r\n\r\n        {/* Sidebar */}\r\n        <aside id=\"sidebar\" className={sidebarOpen ? \"open\" : \"\"}>\r\n          <div className=\"sidebar-title\">\r\n            <div className=\"sidebar-brand\">\r\n              <span className=\"material-icons-outlined\"></span>\r\n              SENIOR PROJECT\r\n            </div>\r\n            <span className=\"material-icons-outlined\" onClick={closeSidebar}>\r\n              close\r\n            </span>\r\n          </div>\r\n\r\n          <ul className=\"sidebar-list\">\r\n            <li className=\"sidebar-list-item\">\r\n              <span onClick={() => selectMenu(\"DASHBOARD\")}>\r\n                <span className=\"material-icons-outlined\">dashboard</span>{\" \"}\r\n                DASHBOARD\r\n              </span>\r\n            </li>\r\n\r\n            <li className=\"sidebar-list-item\">\r\n              <span onClick={() => selectMenu(\"TEAM\")}>\r\n                <span className=\"material-icons-outlined\">groups</span> TEAM\r\n              </span>\r\n            </li>\r\n\r\n            <li className=\"sidebar-list-item\">\r\n              <span onClick={() => selectMenu(\"CONTROL\")}>\r\n                <span className=\"material-icons-outlined\">settings</span>{\" \"}\r\n                CONTROL\r\n              </span>\r\n            </li>\r\n\r\n            <li className=\"sidebar-list-item\">\r\n              <span onClick={() => selectMenu(\"ADMINLOG\")}>\r\n                <span className=\"material-icons-outlined\">construction</span>{\" \"}\r\n                ADMINLOG\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </aside>\r\n        {/* End Sidebar */}\r\n\r\n        {/* Main */}\r\n        <main className=\"main-container\">\r\n          <div className=\"main-title\">\r\n            <h2>{selectedMenu}</h2>\r\n          </div>\r\n\r\n          {selectedMenu === \"DASHBOARD\" && (\r\n            <>\r\n              <div className=\"main-cards\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-inner\">\r\n                    <h2>USER</h2>\r\n                    <span className=\"material-icons-outlined\">groups</span>\r\n                  </div>\r\n                  <h1>{countuser}</h1>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                  <div className=\"card-inner\">\r\n                    <h2>ยาคงเหลือหลอดแรก</h2>\r\n                    <span className=\"material-icons-outlined\">autorenew</span>\r\n                  </div>\r\n                  <div className=\"prog\">\r\n                    <Progress type=\"circle\" percent={30} size=\"small\" />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                  <div className=\"card-inner\">\r\n                    <h2>ยาคงเหลือหลอดสอง</h2>\r\n                    <span className=\"material-icons-outlined\">autorenew</span>\r\n                  </div>\r\n                  <div className=\"prog\">\r\n                    <Progress type=\"circle\" percent={20} size=\"small\" />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                  <div className=\"card-inner\">\r\n                    <h2>ยาคงเหลือหลอดสาม</h2>\r\n                    <span className=\"material-icons-outlined\">autorenew</span>\r\n                  </div>\r\n                  <div className=\"prog\">\r\n                    <Progress type=\"circle\" percent={25} size=\"small\" />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                  <div className=\"card-inner\">\r\n                    <h2>ยาคงเหลือหลอดสี่</h2>\r\n                    <span className=\"material-icons-outlined\">autorenew</span>\r\n                  </div>\r\n                  <div className=\"prog\">\r\n                    <Progress type=\"circle\" percent={25} size=\"small\" />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* <div className=\"card\">\r\n                  <Card bordered={false}>\r\n                    <Statistic\r\n                      title=\"Active\"\r\n                      value={11.28}\r\n                      precision={2}\r\n                      valueStyle={{ color: \"#3f8600\" }}\r\n                      prefix={<ArrowUpOutlined />}\r\n                      suffix=\"%\"\r\n                    />\r\n                  </Card>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                  <Card bordered={false}>\r\n                    <Statistic\r\n                      title=\"Idle\"\r\n                      value={9.3}\r\n                      precision={2}\r\n                      valueStyle={{ color: \"#cf1322\" }}\r\n                      prefix={<ArrowDownOutlined />}\r\n                      suffix=\"%\"\r\n                    />\r\n                  </Card>\r\n                </div> */}\r\n\r\n                {/* Add your main cards here */}\r\n              </div>\r\n\r\n              <div className=\"products\">\r\n                {/* Add your product cards here */}\r\n\r\n                {/* <div className=\"product-card\"> */}\r\n                {/* <h2 className=\"product-description\">Temp & Humidity</h2> */}\r\n                {/* <div className=\"text-secondary\"> */}\r\n                {/* <HighchartsReact\r\n                      highcharts={Highcharts}\r\n                      options={options}\r\n                    /> */}\r\n                {/* </div> */}\r\n                {/* </div> */}\r\n\r\n                <div className=\"social-media\">\r\n                  <div className=\"product\">\r\n                    {/* <div>\r\n                      <div className=\"product-icon background-red\">\r\n                        <i className=\"bi bi-twitter\"></i>\r\n                      </div>\r\n                      <h1 className=\"text-red\">+274</h1>\r\n                      <p className=\"text-secondary\">\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                      </p>\r\n                    </div> */}\r\n                    {/* <div>\r\n                      <div className=\"product-icon background-green\">\r\n                        \r\n                      </div>\r\n                      <h1 className=\"text-green\">{nameone}</h1>\r\n          \r\n                    </div>\r\n\r\n                    <div>\r\n                      <div className=\"product-icon background-green\">\r\n                      </div>\r\n                      <h1 className=\"text-green\">{nametwo}</h1>\r\n                      \r\n                    </div>\r\n\r\n                    <div>\r\n                      <div className=\"product-icon background-orange\">\r\n                        \r\n                      </div>\r\n                      <h1 className=\"text-orange\">{namethree}</h1>\r\n                      \r\n                    </div>\r\n\r\n                    <div>\r\n                      <div className=\"product-icon background-blue\">\r\n                        \r\n                      </div>\r\n                      <h1 className=\"text-blue\">{namefour}</h1>\r\n                     \r\n                    </div> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {selectedMenu === \"TEAM\" && (\r\n            <>\r\n              <div className=\"team1\">\r\n                <Card\r\n                  hoverable\r\n                  style={{ width: 300 }}\r\n                  cover={\r\n                    <Image\r\n                      alt=\"Professor Dr. Wisan Pathomchun\"\r\n                      src=\"https://www.bu.ac.th/uploads/professors/20230105094052_1p23gZ0mf2LULxu_5OPxgLGfPvFusU5.jpg\"\r\n                      width={300}\r\n                      height={300}\r\n                    />\r\n                  }\r\n                >\r\n                  <Meta\r\n                    title=\"ผศ.ดร.วิศาล พัฒน์ชู\"\r\n                    description=\"FACULTY ADVISORS\"\r\n                  />\r\n                </Card>\r\n              </div>\r\n              <div className=\"fixteam\">\r\n                <div className=\"team-container\">\r\n                  <Card\r\n                    hoverable\r\n                    style={{ width: 300 }}\r\n                    cover={\r\n                      <Image\r\n                        alt=\"example\"\r\n                        src=\"https://scontent-bkk1-1.xx.fbcdn.net/v/t39.30808-6/323320300_831499997912863_7842745807329510235_n.jpg?_nc_cat=107&ccb=1-7&_nc_sid=efb6e6&_nc_ohc=rGQgrI42kVkAX8myzqL&_nc_ht=scontent-bkk1-1.xx&oh=00_AfBzn8wiHhFqQahscKgZA6GZ8Uuycjs4_XmIsBrzy1QHOw&oe=65AB9287\"\r\n                        width={300}\r\n                        height={300}\r\n                      />\r\n                    }\r\n                  >\r\n                    <Meta title=\"CHAIWAT COMERINTHRON\" description=\"SOFTWARE\" />\r\n                  </Card>\r\n                  <Card\r\n                    hoverable\r\n                    style={{ width: 300 }}\r\n                    cover={\r\n                      <Image\r\n                        alt=\"example\"\r\n                        src=\"https://scontent-bkk1-1.xx.fbcdn.net/v/t39.30808-6/337012394_233257582512653_7465760359736163477_n.jpg?_nc_cat=103&ccb=1-7&_nc_sid=efb6e6&_nc_ohc=AIBW8QH9iccAX8a6YkL&_nc_ht=scontent-bkk1-1.xx&oh=00_AfAZHAXHEEdTLQHhiz2ZZ16K31c6Fu9Lnmr6iVP8E1aJVA&oe=65AD08B7\"\r\n                        width={300}\r\n                        height={300}\r\n                      />\r\n                    }\r\n                  >\r\n                    <Meta title=\"KANOKPORN HUDSREE\" description=\"HARDWARE\" />\r\n                  </Card>\r\n                  <Card\r\n                    hoverable\r\n                    style={{ width: 300 }}\r\n                    cover={\r\n                      <Image\r\n                        alt=\"example\"\r\n                        src=\"https://scontent-bkk1-1.xx.fbcdn.net/v/t39.30808-6/371034662_1974338542924136_330610339788569331_n.jpg?stp=cp6_dst-jpg&_nc_cat=110&ccb=1-7&_nc_sid=efb6e6&_nc_ohc=1iN2Q8ZqQG8AX_hHb1c&_nc_ht=scontent-bkk1-1.xx&oh=00_AfBUxoo5yNrcwveoUeHBKkUgcNuFa1frfe_7rtQ14I-CdQ&oe=65ACAB4B\"\r\n                        width={300}\r\n                        height={300}\r\n                      />\r\n                    }\r\n                  >\r\n                    <Meta title=\"KASSARAPON CHAYANANT\" description=\"HARDWARE\" />\r\n                  </Card>\r\n                  <Card\r\n                    hoverable\r\n                    style={{ width: 300 }}\r\n                    cover={\r\n                      <Image\r\n                        src=\"https://scontent-bkk1-1.xx.fbcdn.net/v/t39.30808-6/362951835_2042172992795649_5082259832039992477_n.jpg?_nc_cat=101&ccb=1-7&_nc_sid=efb6e6&_nc_ohc=8hNZEngh_18AX_Bs1E8&_nc_ht=scontent-bkk1-1.xx&oh=00_AfAiMdDH-5JG46uVpiF41lUKvZ9YRV_I4VWRZJlZiUqKrw&oe=65ACBCF1\"\r\n                        alt=\"example\"\r\n                        width={300}\r\n                        height={300}\r\n                      />\r\n                    }\r\n                  >\r\n                    <Meta title=\"BENCHAPORN PHANMI\" description=\"CLOUD\" />\r\n                  </Card>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {selectedMenu === \"CONTROL\" && <></>}\r\n\r\n          {selectedMenu === \"ADMINLOG\" && (\r\n            <>\r\n              {isLoggedIn ? null : (\r\n                <div className=\"beforelogin\">\r\n                  <form>\r\n                    <div className=\"container\">\r\n                      <label className=\"signin\" htmlFor=\"signin\">\r\n                        <b>\r\n                          <h1>SIGN IN</h1>\r\n                        </b>\r\n                      </label>\r\n                      <label htmlFor=\"uname\">\r\n                        <b>Username</b>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Username\"\r\n                        name=\"uname\"\r\n                        required\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                      />\r\n                      <label htmlFor=\"psw\">\r\n                        <b>Password</b>\r\n                      </label>\r\n                      <input\r\n                        type=\"password\"\r\n                        placeholder=\"Enter Password\"\r\n                        name=\"psw\"\r\n                        required\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                      />\r\n                      <Col className=\"b\">\r\n                        <Link href=\"/forgorpassword\">forgot password</Link>\r\n                      </Col>\r\n                      <div className=\"cc\">\r\n                        <ReCAPTCHA\r\n                          sitekey=\"6Lcoi9onAAAAAMeXsjmOo05DRzAg1g3yuJqx9yqS\"\r\n                          onChange={handleCaptchaVerify}\r\n                        />\r\n                      </div>\r\n                      <Button\r\n                        className=\"buttonlogin\"\r\n                        type=\"primary\"\r\n                        onClick={_handleLogin}\r\n                      >\r\n                        Login\r\n                      </Button>\r\n                    </div>\r\n                    <p>{errorMessage}</p>\r\n                  </form>\r\n                </div>\r\n              )}\r\n\r\n              {datalog.length > 0 && isLoggedIn && (\r\n                <div className=\"admin-log-table\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Day</th>\r\n                        <th>Time</th>\r\n                        <th>Event</th>\r\n                      </tr>\r\n                    </thead>\r\n                    {currentItems.map((logEntry: LogEntry, index) => (\r\n                      <tr key={index}>\r\n                        <td>{logEntry.day}</td>\r\n                        <td>{logEntry.time}</td>\r\n                        <td>{logEntry.event_happening}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </table>\r\n                  <div className=\"pagination\">\r\n                    <ul className=\"page-numbers\">{renderPageNumbers}</ul>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </main>\r\n        {/* End Main */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","D:\\project\\client\\pages\\_app.tsx",[],[],"D:\\project\\client\\pages\\_document.tsx",[],[],{"ruleId":"54","severity":1,"message":"55","line":254,"column":9,"nodeType":"56","endLine":257,"endColumn":11},"@next/next/no-page-custom-font","Custom fonts not added in `pages/_document.js` will only load for a single page. This is discouraged. See: https://nextjs.org/docs/messages/no-page-custom-font","JSXOpeningElement"]